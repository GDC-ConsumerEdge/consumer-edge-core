{
  "category": "CUSTOM",
  "displayName": "Edge - Anthos Memory Usage",
  "labels": {
    "retail-edge": "true",
    "{{ cluster_name }}": "true"
  },
  "mosaicLayout": {
    "columns": 12,
    "tiles": [
      {
        "height": 4,
        "widget": {
          "title": "K8s Node Memory Allocation %",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "{ t_0:\n    fetch k8s_container\n    | metric\n        'kubernetes.io/anthos/kube_pod_container_resource_requests_memory_bytes'\n    | group_by 1m,\n        [value_kube_pod_container_resource_requests_memory_bytes_mean:\n           mean(value.kube_pod_container_resource_requests_memory_bytes)]\n    | every 1m\n    | group_by [node: metric.node],\n        [value_memory_requested_bytes:\n           aggregate(\n             value_kube_pod_container_resource_requests_memory_bytes_mean)]\n; t_1:\n    fetch k8s_container\n    | metric 'kubernetes.io/anthos/kube_node_status_allocatable_memory_bytes'\n    | group_by 1m,\n        [value_kube_node_status_allocatable_memory_bytes_mean:\n           mean(value.kube_node_status_allocatable_memory_bytes)]\n    | every 1m\n    | group_by [node: metric.node],\n        [value_allocatable_memory_bytes:\n           aggregate(value_kube_node_status_allocatable_memory_bytes_mean)] }\n| join\n| value\n    [v_0:\n       cast_units(\n         div(t_0.value_memory_requested_bytes,\n           t_1.value_allocatable_memory_bytes) * 100,\n         '%')]\n| top 10, v_0"
                }
              }
            ],
            "thresholds": [
              {
                "label": "",
                "targetAxis": "Y1",
                "value": 80
              }
            ],
            "timeshiftDuration": "0s",
            "yAxis": {
              "label": "y1Axis",
              "scale": "LINEAR"
            }
          }
        },
        "width": 6,
        "xPos": 0,
        "yPos": 4
      },
      {
        "height": 4,
        "widget": {
          "title": "Host Memory Usage %",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch gce_instance\n| metric 'agent.googleapis.com/memory/percent_used'\n| filter (metric.state == 'free')\n| group_by 1m, [value_percent_used_mean: cast_units(100,\"%\")-mean(value.percent_used)]\n| every 1m\n| group_by\n    [resource.instance_id, resource.zone,\n     metadata.user.category: metadata.user_labels.category,\n     metadata.user.location: metadata.user_labels.location,\n     metadata.user.type: metadata.user_labels.type,\n     metadata.user.vxlanid: metadata.user_labels.vxlanid,\n     metadata.system.name: metadata.system_labels.name,\n     metadata.system.region: metadata.system_labels.region,\n     metadata.system.state: metadata.system_labels.state],\n    [value_percent_used_mean_aggregate: aggregate(value_percent_used_mean)]"
                }
              }
            ],
            "thresholds": [
              {
                "label": "",
                "targetAxis": "Y1",
                "value": 80
              }
            ],
            "timeshiftDuration": "0s",
            "yAxis": {
              "label": "y1Axis",
              "scale": "LINEAR"
            }
          }
        },
        "width": 6,
        "xPos": 0,
        "yPos": 0
      },
      {
        "height": 4,
        "widget": {
          "title": "Top 10 Container Memory Usage Bytes",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/container_memory_working_set_bytes'\n| filter (metric.pod =~ '.+')\n| group_by 1m,\n    [value_container_memory_working_set_bytes_mean:\n       mean(value.container_memory_working_set_bytes)]\n| every 1m\n| top 10\n| group_by\n    [metric.container, metric.namespace, metric.pod, resource.project_id,\n     resource.location, resource.cluster_name, resource.node_name],\n    [value_container_memory_working_set_bytes_mean_aggregate:\n       aggregate(value_container_memory_working_set_bytes_mean)]"
                }
              }
            ],
            "timeshiftDuration": "0s",
            "yAxis": {
              "label": "y1Axis",
              "scale": "LINEAR"
            }
          }
        },
        "width": 6,
        "xPos": 0,
        "yPos": 8
      },
      {
        "height": 4,
        "widget": {
          "title": "Top 10 Container Memory Requested Bytes",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_container\n| metric\n    'kubernetes.io/anthos/kube_pod_container_resource_requests_memory_bytes'\n| group_by 1m,\n    [value_kube_pod_container_resource_requests_memory_bytes_mean:\n       mean(value.kube_pod_container_resource_requests_memory_bytes)]\n| every 1m\n| top 10\n| group_by\n    [metric.container, metric.namespace, metric.node, metric.pod,\n     resource.location, resource.cluster_name, resource.namespace_name,\n     resource.pod_name, resource.container_name],\n    [value_kube_pod_container_resource_requests_memory_bytes_mean_aggregate:\n       aggregate(value_kube_pod_container_resource_requests_memory_bytes_mean)]"
                }
              }
            ],
            "timeshiftDuration": "0s",
            "yAxis": {
              "label": "y1Axis",
              "scale": "LINEAR"
            }
          }
        },
        "width": 6,
        "xPos": 6,
        "yPos": 4
      },
      {
        "height": 4,
        "widget": {
          "title": "Host Memory Usage Bytes",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "minAlignmentPeriod": "60s",
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "apiSource": "DEFAULT_CLOUD",
                  "timeSeriesFilter": {
                    "aggregation": {
                      "alignmentPeriod": "60s",
                      "crossSeriesReducer": "REDUCE_SUM",
                      "groupByFields": [
                        "resource.label.\"instance_id\"",
                        "resource.label.\"zone\"",
                        "metadata.system_labels.\"name\"",
                        "metadata.system_labels.\"region\"",
                        "metadata.system_labels.\"state\""
                      ],
                      "perSeriesAligner": "ALIGN_MEAN"
                    },
                    "filter": "metric.type=\"agent.googleapis.com/memory/bytes_used\" resource.type=\"gce_instance\" metric.label.\"state\"!=\"free\""
                  }
                }
              }
            ],
            "timeshiftDuration": "0s",
            "yAxis": {
              "label": "y1Axis",
              "scale": "LINEAR"
            }
          }
        },
        "width": 6,
        "xPos": 6,
        "yPos": 0
      },
      {
        "height": 2,
        "widget": {
          "scorecard": {
            "gaugeView": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "thresholds": [],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch gce_instance\n| metric 'agent.googleapis.com/memory/percent_used'\n| filter (metric.state == 'free')\n| group_by 1m, [value_percent_used_max: cast_units(100,\"%\")-min(value.percent_used)]\n| every 1m\n| group_by [], [value_percent_used_max_max: max(value_percent_used_max)]"
            }
          },
          "title": "Host Max Memory Usage %"
        },
        "width": 4,
        "xPos": 6,
        "yPos": 8
      }
    ]
  }
}
