- name: Get service facts
  service_facts:
  tags:
  - observability-agent-install

- debug:
    msg: "{{ ansible_facts.services['stackdriver-agent.service'].status }}"
  when: "ansible_facts.services['stackdriver-agent.service'] is defined"
  tags:
  - observability-agent-install

- name: Download Monitoring Agent script
  ansible.builtin.get_url:
    url: https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh
    dest: /var/add-monitoring-agent-repo.sh
    mode: '0700'
  when: (ansible_facts.services['stackdriver-agent.service'] is undefined) or
        (ansible_facts.services['stackdriver-agent.service'].status != "enabled")
  tags:
  - observability-agent-install

- name: Run Monitoring Agent install script
  script:
    cmd: /var/add-monitoring-agent-repo.sh --also-install
  when: (ansible_facts.services['stackdriver-agent.service'] is undefined) or
        (ansible_facts.services['stackdriver-agent.service'].status != "enabled")
  tags:
  - observability-agent-install

  ### Configure Monitoring agent
- name: Copy collectd config
  template:
    src: collectd.conf.j2
    dest: "/etc/stackdriver/collectd.conf"
  tags:
  - collectd-config

- name: Copy stackdriver initd script
  template:
    src: stackdriver-agent.j2
    dest: "/etc/init.d/stackdriver-agent"
  tags:
  - stackdriver-initd

### Configure Logging agent
- name: Copy fluend config
  template:
    src: google-fluentd.conf.j2
    dest: "/tmp/google-fluentd.conf"
  when: is_cloud_resource is undefined or is_cloud_resource == False
  tags:
  - fluentd-config
  - fluentd

- name: Copy fluent initd script
  template:
    src: google-fluentd.j2
    dest: "/tmp/google-fluentd"
  when: is_cloud_resource is undefined or is_cloud_resource == False
  tags:
  - fluentd-initd
  - fluentd

- name: install logging agent
  script: files/install-logging-agent.sh > /var/log/logging-agent-logs.txt
  args:
    creates: /var/log/logging-agent-logs.txt
  when: is_cloud_resource is undefined or is_cloud_resource == False
  tags:
  - logging-agent

### Restart both agents after config changes
- name: Restart stackdriver-agent service
  ansible.builtin.service:
    name: stackdriver-agent
    state: restarted
  when: (ansible_facts.services['stackdriver-agent.service'] is undefined) or
        (ansible_facts.services['stackdriver-agent.service'].status != "enabled")
  tags:
  - observability-agent-install
  - ops-agent


