# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


- name: Create temp folder
  ansible.builtin.tempfile:
    state: directory
    suffix: temp
    path: "/tmp"
  register: tmpfile
  tags:
  - pre-cache-unbundle

- name: Create a directory if it does not exist to keep ACM from failing
  ansible.builtin.file:
    path: "{{ acm_config_files }}"
    state: directory
    mode: '0755'

- name: Display path to to Temp file
  debug:
    msg: "{{ tmpfile.path }}"
  tags:
  - pre-cache-unbundle

- name: Unbundle binaries to temp folder
  include_tasks: unbundle-binaries.yml
  vars:
    fact_name: "unbundle_status"
    bundle_target: "{{ tmpfile }}"
  tags:
  - pre-cache-unbundle

- name: Fail if cannot unbundle and system MUST use cache
  ansible.builtin.fail:
    msg: The Binaries Artifact ZIP are not found and are required.
  when:
    - unbundle_status == false
    - must_use_precache == true

#####################################
#####################################

- name: Unpack bundle.zip and put the files in their right location
  ansible.builtin.unarchive:
    src: "{{ tmpfile.path }}/{{bundle_file_name}}"
    dest: "{{ tmpfile.path }}"
    remote_src: yes # file exists on the provisoned servers already
    creates: "{{ tmpfile.path }}/config.csv" # one of the files

- name: List all files in the bundle
  command:
    cmd: "ls -al {{ tmpfile.path }}"
  register: output

- name: display listing
  debug:
    msg: "{{ output.stdout_lines }}"

- name: "Copy script to remote server"
  copy:
    src: "move-files-to-destination.sh"
    dest: "/tmp/move-files-to-destination.sh"
    mode: "0755"

- name: Execute command
  command:
    cmd: "/tmp/move-files-to-destination.sh {{ tmpfile.path }}"
  register: script_output

- name: Display script output
  debug:
    msg: "{{ script_output.stderr_lines }}"
  when: script_output.rc > 0
