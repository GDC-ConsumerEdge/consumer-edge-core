---
# tasks file for abm-install

  # - name: Print ServiceAccounts and Roles
  #   debug:
  #     msg: "{{ item.0.name }}\n-->{{ item.1 }}\n"
  #   loop: "{{ service_accounts | subelements('roles') }}"
  #   run_once: true

# ### Create install folder
#   - name: Create isolated install folder
#     file:
#       path: '{{ abm_install_folder }}'
#       state: directory
#       mode: '0755'
#     tags:
#     - abm-install

### Create or enable Google Service Accounts
  - name: Create or Enable Service Accounts
    shell: |
          SA_NAME="{{ item.name }}"
          PROJECT="{{ google_project_id }}"
          DESCRIPTION="{{ item.description }}"
          CURR_SA_NAME=$(gcloud iam service-accounts describe ${SA_NAME}@${PROJECT}.iam.gserviceaccount.com --format="value(name)" 2> /dev/null)
          if [ -z "$CURR_SA_NAME" ]; then
              gcloud iam service-accounts create ${SA_NAME} --display-name "${DESCRIPTION}"
          else
              gcloud iam service-accounts enable "${SA_NAME}@${PROJECT}.iam.gserviceaccount.com"
          fi
    loop: "{{ service_accounts }}"
    run_once: true # only one machine to do this
    args:
      executable: /bin/bash
      creates: /var/nothing
    environment:
      PATH: "{{ tools_base_path }}/google-cloud-sdk/bin:{{ ansible_env.PATH }}"
      GOOGLE_APPLICATION_CREDENTIALS: "/var/keys/gsa-key.json"
    tags:
    - abm-install

  - name: Create keys
    command:
      cmd: gcloud iam service-accounts keys create {{ remote_gsa_key }}/{{ item.name }}-creds.json --iam-account={{ item.name }}@{{ google_project_id }}.iam.gserviceaccount.com  --project={{ google_project_id }}
      creates: "{{ remote_gsa_key }}/{{ item.name }}-creds.json"
    loop: "{{ service_accounts }}"
    environment:
      PATH: "{{ tools_base_path }}/google-cloud-sdk/bin:{{ ansible_env.PATH }}"
      GOOGLE_APPLICATION_CREDENTIALS: "/var/keys/gsa-key.json"

# ### Create configuration file (TODO: Switch this to a template)
#   - name: Create configuration file
#     command:
#       cmd: bmctl create config -c {{ cluster_name }} --enable-apis --create-service-accounts --project-id={{ google_project_id }}
#       creates: "{{ abm_install_folder }}/bmctl-workspace/{{ cluster_name }}/{{ cluster_name }}.yaml"
#     args:
#       chdir: "{{ abm_install_folder }}"
#     retries: 5
#     environment:
#       GOOGLE_APPLICATION_CREDENTIALS: "/var/keys/gsa-key.json" # UGH, Ansible SUCKS!!!  Interactive shell doesn't pick up existing ENV variables
#     tags:
#     - abm-install

#   # - name: Validate configuration file updates
#   #   command: bmctl check config --cluster={{ cluster_name }} # Does not work
#   #   args:
#   #     chdir: "{{ abm_install_folder }}"
#   #   environment:
#   #     GOOGLE_APPLICATION_CREDENTIALS: "/var/keys/gsa-key.json"

#   - name: Store or do something with kubeconfig
#     debug:
#       msg: "do something with the config -- kubectl --kubeconfig bmctl-workspace/cluster1/cluster1-kubeconfig get nodes"
#     tags:
#     - abm-install

# DONE