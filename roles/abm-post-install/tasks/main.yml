# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# These are post-installation steps that address defects/bugs or are needed after the system has been fully setup

- name: "Update metrics-server resources (b/267792905)"
  import_tasks: update-resoruces-metrics-server.yaml
  when:
  - abm_version is version('1.14.2', '<')
  tags:
  - abm-post-install
  - bugfix-267792905
  - metrics-server-resources

### Add Kube PS1
- name: "Add Kube PS1 to all known users"
  import_tasks: add-kube-ps1.yml
  tags:
  - abm-post-install
  - kube-ps1

### Setup CDI cpumanager flag for nodes
- name: "Add CDI required cpumanager label for nodes"
  import_tasks: create-cdi-node-label.yaml
  tags:
  - abm-post-install
  - cdi-install
  - cdi-node-hack

### Install Auditd
- name: "Setup Auditd service"
  import_tasks: setup-auditd.yml
  tags:
  - abm-post-install
  - observability-setup

 ### Install Obeservability agents
- name: "Setup Obeservability Agents on Physical"
  import_tasks: setup-google-observability.yml
  when: install_observability == true and (is_cloud_resource is undefined or is_cloud_resource == false)
  tags:
  - abm-post-install
  - observability-setup

- name: Remove provisioning GSA profile
  file:
    path: /etc/profile.d/99-gcloud-auth-provisioning-gsa.sh
    state: absent
  tags:
  - profile
  - initial-install
  - non-interactive-shell
  - gcloud-setup
  - gsa-removal

# Remove the provisioning GSA after installation is complete
- name: Remove the provisioning GSA
  ansible.builtin.file:
    path: '{{ remote_keys_folder }}/provisioning-gsa.json'
    state: absent
  tags:
  - gsa-removal

- name: Add Cluster Validation Test Script
  template:
    src: "cluster-validation.sh.j2"
    dest: "{{ tools_base_path }}/cluster-validation.sh"
    mode: '0755'
  tags:
  - cluster-validation-test
  - cluster-validation-test-copy

- name: Run Cluster Validation Test
  ignore_errors: true
  no_log: true
  command:
    cmd: "{{ tools_base_path }}/cluster-validation.sh"
  environment:
    IS_PRIMARY: "{{ (primary_cluster_machine is defined) and (primary_cluster_machine == true) }}"
    VPN_GATEWAY_NAME: "{{ vpn_tunnel_name }}"
    IS_PLAIN_OUTPUT: "true"
  register: cluster_validation_test_result
  tags:
  - cluster-validation-test
  - cluster-validation-test-run

- name: "Cluster Validation Test Result (success)"
  debug:
    msg: "{{ item }}"
  loop:
  - "{{ cluster_validation_test_result.stdout_lines }}"
  when:
  - cluster_validation_test_result.rc == 0
  tags:
  - cluster-validation-test
  - cluster-validation-test-run

- name: "Cluster Validation Test Result (failed)"
  debug:
    msg: "{{ item }}"
  loop:
  - "{{ cluster_validation_test_result.stdout_lines }}"
  when:
  - cluster_validation_test_result.rc != 0
  tags:
  - cluster-validation-test
  - cluster-validation-test-run
