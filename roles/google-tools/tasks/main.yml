---

  - name: Fail if local PROJECT_ID ENV is not defined
    assert:
      that:
        - google_project_id != ""
      fail_msg: "The local environment variable 'PROJECT_ID' needs to be defined for the target Google Project ID"

  - name: Fail if local LOCAL_GSA_FILE ENV is not defined
    assert:
      that:
        - local_gsa_key != ""
      fail_msg: "The local environment variable 'LOCAL_GSA_FILE' needs to be set to the local filesystem GSA JSON key"

  # Credentials

  - name: Create the temp keys directory
    file:
      path: '{{ remote_gsa_key }}'
      state: directory
      mode: '0700'
    tags:
    - initial-install
    - tool-authentication

  - name: Get the SA key to initialize gcloud with
    copy:
      src: '{{ local_gsa_key }}'
      dest: '{{ remote_gsa_key }}/gsa-key.json'
      mode: '0400' # read only by user
    tags:
    - initial-install
    - tool-authentication

  ##### gcloud

  - name: Create the tools temp directory
    file:
      path: '{{ tools_base_path }}'
      state: directory
      mode: '0755'
    tags:
    - initial-install

  - name: Download and unarchive gcloud
    unarchive:
      src: 'https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-{{ gcloud_version }}-linux-x86_64.tar.gz'
      dest: '{{ tools_base_path }}'
      creates: '{{ tools_base_path }}/google-cloud-sdk'
      remote_src: yes
    tags:
    - initial-install

### Setup Path & Auto-complete

### TODO: If the requirement is to have all users access gcloud, kubectl, etc...then add the GOOGLE_APPLICATION_CREDENTIALS here along with common location & chmod
  - name: Add gcloud and tools to PATH
    blockinfile:
      path: /etc/profile.d/bash_completion.sh
      block: |
        # The next line updates PATH for the Google Cloud SDK.
        if [ -f '/var/google-tools-install/google-cloud-sdk/path.bash.inc' ]; then source '/var/google-tools-install/google-cloud-sdk/path.bash.inc'; fi

        # The next line enables shell command completion for gcloud.
        if [ -f '/var/google-tools-install/google-cloud-sdk/completion.bash.inc' ]; then source '/var/google-tools-install/google-cloud-sdk/completion.bash.inc'; fi
      marker: "# { mark } Added by Ansible google-tools task"

  - name: Add gcloud and tools to PATH for Root
    blockinfile:
      path: /root/.bashrc
      block: |
        # The next line updates PATH for the Google Cloud SDK.
        if [ -f '/var/google-tools-install/google-cloud-sdk/path.bash.inc' ]; then source '/var/google-tools-install/google-cloud-sdk/path.bash.inc'; fi

        # The next line enables shell command completion for gcloud.
        if [ -f '/var/google-tools-install/google-cloud-sdk/completion.bash.inc' ]; then source '/var/google-tools-install/google-cloud-sdk/completion.bash.inc'; fi
      marker: "# { mark } Added by Ansible google-tools task"

### FIXME: this is a possible security issue to leave the key on the box
  - name: Authenticate gcloud
    shell: |
      gcloud auth activate-service-account --key-file={{ remote_gsa_key }}/gsa-key.json --project {{ google_project_id }}
      mkdir -p ~/.gcloud
      cp {{ remote_gsa_key }}/gsa-key.json ~/.gcloud/gsa-key.json
      export GOOGLE_APPLICATION_CREDENTIALS=~/.gcloud/gsa-key.json
      gcloud config configurations list
      exit $?
    args:
      executable: /bin/bash
      creates: /var/nothing
    environment:
        PATH: "{{ tools_base_path }}/google-cloud-sdk/bin:{{ ansible_env.PATH }}"
    tags:
    - initial-install


  - name: Enable services
    shell: |
      gcloud services enable anthos.googleapis.com anthosgke.googleapis.com cloudresourcemanager.googleapis.com container.googleapis.com gkeconnect.googleapis.com gkehub.googleapis.com serviceusage.googleapis.com stackdriver.googleapis.com monitoring.googleapis.com logging.googleapis.com
      exit $?
    args:
      executable: /bin/bash
    environment:
        PATH: "{{ tools_base_path }}/google-cloud-sdk/bin:{{ ansible_env.PATH }}"
    tags:
    - initial-install

### Additional Tools
  - name: Install kubectl, nomos, kustomize and gsutil
    shell: |
      gcloud components install kubectl kustomize nomos gsutil -q
      exit $?
    args:
      executable: /bin/bash
    environment:
        PATH: "{{ tools_base_path }}/google-cloud-sdk/bin:{{ ansible_env.PATH }}"
    tags:
    - initial-install

  - name: Install Anthos Bare Metal CLI
    shell: |
      gsutil cp gs://anthos-baremetal-release/bmctl/{{ bmctl_version }}/linux-amd64/bmctl {{ tools_base_path }}
      chmod 777 {{ tools_base_path }}/bmctl
      mv {{ tools_base_path }}/bmctl /usr/bin/bmctl
      bmctl
      exit $?
    args:
      creates: /usr/bin/bmctl
      executable: /bin/bash
    environment:
        PATH: "{{ tools_base_path }}/google-cloud-sdk/bin:{{ ansible_env.PATH }}"
    tags:
    - initial-install

### Setup Kubectl tools (kubectx, kubens, kubectl completion)