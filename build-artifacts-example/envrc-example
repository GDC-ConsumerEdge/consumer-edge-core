
# GSA Key used for provisioning (result of running ./scripts/create-primary-gsa.sh)
export PROVISIONING_GSA_FILE=build-artifacts/provisioning-gsa.json
export NODE_GSA_FILE="${PROVISIONING_GSA_FILE}"

###
### GCP Project Settings (change if needed per each provisioning run)
###

# GCP Project ID
export PROJECT_ID="[[ gcp-project ]]"
# Bucket to store cluster snapshot information
# GCP Secret Manager Project ID
export SM_PROJECT_ID="${SM_PROJECT_ID:-${PROJECT_ID}}"
# GCP Service Acocunt Project ID
export SA_PROJECT_ID="${SA_PROJECT_ID:-${PROJECT_ID}}"

# Determines which project contains the provisioning image. If PROVISIONING_IMAGE_PROJECT_ID is
# unset, it will default to the PROJECT_ID.
export PROVISIONING_IMAGE_PROJECT_ID=${PROVISIONING_IMAGE_PROJECT_ID:-$PROJECT_ID}

# Bucket to store cluster snapshot information
export SNAPSHOT_GCS="[[ gcp-project ]]-cluster-snapshots"

# GCP Project Region (Adjust as desired)
export REGION="[[ gcp-region ]]"
# GCP Project Zone (Adjust as desired)
export ZONE="${REGION}-b"

###
### ACM Settings.  ACM Repos have several authentication to access the repository.
###
######  Cluster Name for ACM #############
# Set the name of the cluster for ACM to use (NOTE: If provisioning multiple clusters, this is not an effective naming method)
export CLUSTER_ACM_NAME="[[ cluser-name ]]"    # Default if not set is defined on the primary_machine of the host-vars

### Options are: none (default), token, ssh
###
# export ROOT_REPO_TYPE="none"
export ROOT_REPO_TYPE="token"
# export ROOT_REPO_TYPE="ssh"

### ACM Root Repo structure type
export ROOT_REPO_STRUCTURE="unstructured" # default is hierarchy

######  SSH Type #############
# Path to the SSH private key for the SSH user type
# export SCM_SSH_PRIVATE_KEYFILE="$(pwd)/build-artifacts/gsr-google"

######  Token Type #############
# Values for Personal Access Token when REPO_TYPE is "token"
export SCM_TOKEN_USER="[[ your PAT user name]]"
export SCM_TOKEN_TOKEN="[[ your PAT token]]"

###### HTTP / HTTPS Proxy #########
# Variables for HTTP proxy (leave empty or remove if not used)
export HTTP_PROXY_USER=""
export HTTP_PROXY_PASS=""
export HTTP_PROXY_ADDR=""
export HTTP_PROXY_PORT=""
export HTTP_PROXY_PROTOCOL=""                       # http or https
# Variables for HTTPS proxy (leave empty or remove if not used)
export HTTPS_PROXY_USER=""
export HTTPS_PROXY_PASS=""
export HTTPS_PROXY_ADDR=""                          #  192.168.x.y
export HTTPS_PROXY_PORT=""
export HTTPS_PROXY_PROTOCOL=""                      # http or https

###
### Root Repo URL
###    NOTE: ROOT_REPO_TYPE of "ssh" MUST start with ssh:// (not git://)
###
export ROOT_REPO_URL="https://gitlab.com/gcp-solutions-public/retail-edge/primary-root-repo-template.git"                               # RootRepo Kgr
# export ROOT_REPO_URL="ssh://example-user@google.com@source.example.google.com:2022/p/[[ gcp-project ]]/r/primary-root-repo-template"  # SSH

## Inside the Root Repo, the following are the default values for the Root Repo
export ROOT_REPO_BRANCH="main"
export ROOT_REPO_DIR="/config/clusters/${CLUSTER_ACM_NAME}/meta"         # RootRepo Kgr

###
### OIDC Settings
###
# OIDC Configuration (off by default)
export OIDC_CLIENT_ID="[[ your OIDC client ID]]"
export OIDC_CLIENT_SECRET="[[ your OIDC client secret]]"
export OIDC_USER="[[ your OIDC user]]"
export OIDC_ENABLED="false"  # Set to "true" to enable OIDC, if "true", then above fields need to be set


### Extras
export BASTION="gcloud compute ssh --zone \"${ZONE}\" \"bastion-host-gdc-so\"  --project \"${PROJECT_ID}\""
export MACHINE_SIZE="n2-standard-8"
export MIN_MACHINE_PLATFORM="Intel Ice Lake"
export DISK_SIZE="130G"
export SECOND_DISK_SIZE="500G"

### SDS Configuration
# Optional configuration for the Cluter Trait Repo of the target SDS. All of the below commented out configuration
#   are the default configurations programmed in the provisioning process (ie, they do not need to be explicitly set if
#   they are not different than the below values)
####
# export SDS_REPO_URL="https://gitlab.com/gcp-solutions-public/retail-edge/available-cluster-traits/longhorn-anthos.git"
# export SDS_REPO_BRANCH="main"
# export SDS_REPO_STRUCTURE="hierarchy" # vs "unstructred"
# export SDS_TOKEN_USER="${SCM_TOKEN_USER}"
# export SDS_TOKEN_TOKEN="${SCM_TOKEN_TOKEN}"

# If the setup.sh will create necessary firewall rules in GCP for in-cloud clusters
export MANAGE_FIREWALL_RULES="true"